{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./environment.service\";\nexport class UserService {\n  constructor(http, environmentService) {\n    this.http = http;\n    this.environmentService = environmentService;\n    this.API_URL = this.environmentService.apiUrl;\n  }\n  createUser(user) {\n    return this.http.post(`${this.API_URL}/users`, user);\n  }\n  getUserById(id) {\n    return this.http.get(`${this.API_URL}/users/${id}`);\n  }\n  getUsers() {\n    return this.http.get(`${this.API_URL}/users`);\n  }\n  updateUser(id, user) {\n    return this.http.put(`${this.API_URL}/users/${id}`, user);\n  }\n  deleteUser(id) {\n    return this.http.delete(`${this.API_URL}/users/${id}`);\n  }\n  static {\n    this.ɵfac = function UserService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.EnvironmentService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserService,\n      factory: UserService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["UserService","constructor","http","environmentService","API_URL","apiUrl","createUser","user","post","getUserById","id","get","getUsers","updateUser","put","deleteUser","delete","i0","ɵɵinject","i1","HttpClient","i2","EnvironmentService","factory","ɵfac","providedIn"],"sources":["C:\\Users\\gabri\\OneDrive\\Documentos\\ProjetoWedsonFront\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { User, CreateUserRequest } from '../models/user';\r\nimport { EnvironmentService } from './environment.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  private readonly API_URL: string;\r\n\r\n  constructor(private http: HttpClient, private environmentService: EnvironmentService) {\r\n    this.API_URL = this.environmentService.apiUrl;\r\n  }\r\n\r\n  createUser(user: CreateUserRequest): Observable<User> {\r\n    return this.http.post<User>(`${this.API_URL}/users`, user);\r\n  }\r\n\r\n  getUserById(id: number): Observable<User> {\r\n    return this.http.get<User>(`${this.API_URL}/users/${id}`);\r\n  }\r\n\r\n  getUsers(): Observable<User[]> {\r\n    return this.http.get<User[]>(`${this.API_URL}/users`);\r\n  }\r\n\r\n  updateUser(id: number, user: Partial<User>): Observable<User> {\r\n    return this.http.put<User>(`${this.API_URL}/users/${id}`, user);\r\n  }\r\n\r\n  deleteUser(id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.API_URL}/users/${id}`);\r\n  }\r\n}\r\n\r\n\r\n"],"mappings":";;;AASA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB,EAAUC,kBAAsC;IAAhE,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,kBAAkB,GAAlBA,kBAAkB;IAC9D,IAAI,CAACC,OAAO,GAAG,IAAI,CAACD,kBAAkB,CAACE,MAAM;EAC/C;EAEAC,UAAUA,CAACC,IAAuB;IAChC,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAO,GAAG,IAAI,CAACJ,OAAO,QAAQ,EAAEG,IAAI,CAAC;EAC5D;EAEAE,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAO,GAAG,IAAI,CAACP,OAAO,UAAUM,EAAE,EAAE,CAAC;EAC3D;EAEAE,QAAQA,CAAA;IACN,OAAO,IAAI,CAACV,IAAI,CAACS,GAAG,CAAS,GAAG,IAAI,CAACP,OAAO,QAAQ,CAAC;EACvD;EAEAS,UAAUA,CAACH,EAAU,EAAEH,IAAmB;IACxC,OAAO,IAAI,CAACL,IAAI,CAACY,GAAG,CAAO,GAAG,IAAI,CAACV,OAAO,UAAUM,EAAE,EAAE,EAAEH,IAAI,CAAC;EACjE;EAEAQ,UAAUA,CAACL,EAAU;IACnB,OAAO,IAAI,CAACR,IAAI,CAACc,MAAM,CAAO,GAAG,IAAI,CAACZ,OAAO,UAAUM,EAAE,EAAE,CAAC;EAC9D;;;uCAzBWV,WAAW,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,kBAAA;IAAA;EAAA;;;aAAXtB,WAAW;MAAAuB,OAAA,EAAXvB,WAAW,CAAAwB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}