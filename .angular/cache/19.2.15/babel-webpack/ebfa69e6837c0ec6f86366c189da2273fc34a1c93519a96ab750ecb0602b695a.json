{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { Validators, ReactiveFormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/snack-bar\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/progress-spinner\";\nfunction LoginComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email \\u00E9 obrigat\\u00F3rio \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Senha \\u00E9 obrigat\\u00F3ria \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\nfunction LoginComponent_mat_spinner_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 11);\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(fb, authService, router, snackBar) {\n      this.fb = fb;\n      this.authService = authService;\n      this.router = router;\n      this.snackBar = snackBar;\n      this.loading = false;\n      this.errorMessage = '';\n      this.loginForm = this.fb.group({\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required]]\n      });\n    }\n    onSubmit() {\n      if (this.loginForm.valid) {\n        this.loading = true;\n        this.errorMessage = '';\n        // Limpar token antigo antes do login\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        const loginData = this.loginForm.value;\n        console.log('Dados do login:', loginData);\n        this.authService.login(loginData).subscribe({\n          next: response => {\n            console.log('Login bem-sucedido:', response);\n            this.snackBar.open('Login realizado com sucesso!', 'Fechar', {\n              duration: 3000,\n              horizontalPosition: 'center',\n              verticalPosition: 'top'\n            });\n            // Navegar imediatamente pois os dados já estão carregados\n            this.router.navigate(['/usuarios']);\n          },\n          error: error => {\n            this.loading = false;\n            this.errorMessage = 'Email ou senha inválidos';\n            this.snackBar.open('Erro no login. Verifique suas credenciais.', 'Fechar', {\n              duration: 5000,\n              horizontalPosition: 'center',\n              verticalPosition: 'top'\n            });\n            console.error('Erro no login:', error);\n            console.error('Detalhes do erro:', error.error);\n          }\n        });\n      }\n    }\n    static {\n      this.ɵfac = function LoginComponent_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.MatSnackBar));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: LoginComponent,\n        selectors: [[\"app-login\"]],\n        decls: 22,\n        vars: 7,\n        consts: [[1, \"login-container\"], [1, \"login-card\"], [1, \"login-form\", 3, \"ngSubmit\", \"formGroup\"], [\"appearance\", \"outline\", 1, \"full-width\"], [\"matInput\", \"\", \"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Digite seu email\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Digite sua senha\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"full-width\", 3, \"click\", \"disabled\"], [\"diameter\", \"20\", \"style\", \"margin-right: 10px;\", 4, \"ngIf\"], [1, \"error-message\"], [\"diameter\", \"20\", 2, \"margin-right\", \"10px\"]],\n        template: function LoginComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\", 1)(2, \"mat-card-header\")(3, \"mat-card-title\");\n            i0.ɵɵtext(4, \"Login\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(5, \"mat-card-content\")(6, \"form\", 2);\n            i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵelementStart(7, \"mat-form-field\", 3)(8, \"mat-label\");\n            i0.ɵɵtext(9, \"Email\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(10, \"input\", 4);\n            i0.ɵɵtemplate(11, LoginComponent_mat_error_11_Template, 2, 0, \"mat-error\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"mat-form-field\", 3)(13, \"mat-label\");\n            i0.ɵɵtext(14, \"Senha\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(15, \"input\", 6);\n            i0.ɵɵtemplate(16, LoginComponent_mat_error_16_Template, 2, 0, \"mat-error\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(17, LoginComponent_div_17_Template, 2, 1, \"div\", 7);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(18, \"mat-card-actions\")(19, \"button\", 8);\n            i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_19_listener() {\n              return ctx.onSubmit();\n            });\n            i0.ɵɵtemplate(20, LoginComponent_mat_spinner_20_Template, 1, 0, \"mat-spinner\", 9);\n            i0.ɵɵtext(21);\n            i0.ɵɵelementEnd()()()();\n          }\n          if (rf & 2) {\n            let tmp_1_0;\n            let tmp_2_0;\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_1_0.touched));\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_2_0.touched));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid || ctx.loading);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.loading);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate1(\" \", ctx.loading ? \"Entrando...\" : \"Entrar\", \" \");\n          }\n        },\n        dependencies: [CommonModule, i5.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, MatCardModule, i6.MatCard, i6.MatCardActions, i6.MatCardContent, i6.MatCardHeader, i6.MatCardTitle, MatFormFieldModule, i7.MatFormField, i7.MatLabel, i7.MatError, MatInputModule, i8.MatInput, MatButtonModule, i9.MatButton, MatProgressSpinnerModule, i10.MatProgressSpinner, MatSnackBarModule],\n        styles: [\".login-container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;min-height:100vh;background:linear-gradient(135deg,#667eea,#764ba2);padding:20px}.login-card[_ngcontent-%COMP%]{max-width:400px;width:100%}.login-form[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:16px}.full-width[_ngcontent-%COMP%]{width:100%}.error-message[_ngcontent-%COMP%]{color:#f44336;font-size:14px;margin-top:8px}mat-card-actions[_ngcontent-%COMP%]{padding:16px}\"]\n      });\n    }\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}